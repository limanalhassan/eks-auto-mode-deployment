name: Build & Push (Docker Hub)

on:
  push:
    branches: ["master"]
    paths-ignore:
      - 'application/**'
  workflow_dispatch:

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/opslevel-test

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Install yq
        run: |
          sudo apt-get update && sudo apt-get install -y jq  # jq is needed by yq
          sudo wget https://github.com/mikefarah/yq/releases/download/v4.15.1/yq_linux_amd64 -O /usr/local/bin/yq
          sudo chmod +x /usr/local/bin/yq
          yq --version

      - name: Compute timestamp tag
        id: ts
        run: echo "tag=$(date -u +'%Y-%m-%d-%H-%M')" >> "$GITHUB_OUTPUT"

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/opslevel-test:${{ steps.ts.outputs.tag }}  # Use only the timestamp tag
          labels: ${{ steps.meta.outputs.labels }}

      - name: Update YAML files with new image tag
        run: |
          echo "Updating YAML files with new image tag..."
          IMAGE_TAG="${{ secrets.DOCKERHUB_USERNAME }}/opslevel-test:${{ steps.ts.outputs.tag }}"
          yq eval ".image = \"${IMAGE_TAG}\"" -i application/dev/dev.yaml
          yq eval ".image = \"${IMAGE_TAG}\"" -i application/prod/prod.yaml
          yq eval ".image = \"${IMAGE_TAG}\"" -i application/staging/staging.yaml
          cat application/dev/dev.yaml  # Print out the dev.yaml file as an example

      - name: Commit and push updated YAML files
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add application/*
          git commit -m "Update image tag to ${IMAGE_TAG}"
          git push https://github.com:${{ secrets.GH_TOKEN }}@github.com/${{ github.repository }} HEAD:master
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
