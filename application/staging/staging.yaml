apiVersion: v1
kind: Namespace
metadata:
  name: staging
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-svc
  namespace: staging
  labels: {app: hello-svc}
spec:
  replicas: 1
  selector:
    matchLabels: {app: hello-svc}
  template:
    metadata:
      labels: {app: hello-svc}
    spec:
      containers:
        - name: app
          image: limanalhassan/opslevel-test:2025-09-08-22-37
          ports:
            - containerPort: 8080
          env:
            - name: ENV
              value: "staging"
          resources:
            requests: {cpu: 50m, memory: 64Mi}
            limits: {cpu: 200m, memory: 128Mi}
---
apiVersion: v1
kind: Service
metadata:
  name: hello-svc
  namespace: staging
  labels: {app: hello-svc}
spec:
  selector: {app: hello-svc}
  ports:
    - name: http
      port: 80
      targetPort: 8080
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hello-svc
  namespace: staging
  annotations:
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80},{"HTTPS":443}]'
    alb.ingress.kubernetes.io/ssl-redirect: "443"
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    alb.ingress.kubernetes.io/load-balancer-name: opslevel-app-alb
    alb.ingress.kubernetes.io/target-group-attributes: stickiness.enabled=true,stickiness.lb_cookie.duration_seconds=60
    alb.ingress.kubernetes.io/healthcheck-path: /
    alb.ingress.kubernetes.io/success-codes: "200-399"
spec:
  ingressClassName: alb
  rules:
    - host: staging.limanalhassan.work
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: hello-svc
                port:
                  number: 80
